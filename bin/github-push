#!/bin/bash

# config
prog="${0##*/}"
user="$(git config github.user)"
pushfrom="$(git config github.push.from)"
workdir="$(git config github.push.workdir)"
repos=( "$@" )

# set default repos
if [[ $# == 0 ]]; then
	gitroot="$(git rev-parse --show-toplevel 2>/dev/null)"
	if [[ -n "$gitroot" ]]; then
		repos=( "$(basename "${gitroot%.git}")" )
	else
		repos=( $(git config github.push.repos) )
	fi
fi

# run on a different host if necessary
if [[ -n "$pushfrom" ]]; then
	exec ssh "$pushfrom" "$prog" "$@"
fi

# switch to work dir
if [[ -n "$workdir" ]]; then
	cd "$workdir" || exit
fi

# push each repo
for repo in "${repos[@]}"; do
	if [[ -d "$repo" ]]; then
		pushd "$repo" &>/dev/null
	elif [[ -d "$repo.git" ]]; then
		pushd "$repo.git" &>/dev/null
	else
		continue
	fi

	# add remote
	if ! git remote | grep -q origin; then
		git remote add origin "git@github.com:$user/$repo.git"
	fi

	# check for ssh key
	if [[ -n "$(git config github.key)" ]]; then
		export GIT_SSH_COMMAND="ssh -i $(git config github.key)"
	fi

	# push branches
	for ref in refs/heads/*; do
		head="${ref##*/}"
		git symbolic-ref HEAD "$ref"
		if ! git branch -vv | grep -q "$head.*origin/$head"; then
			git push --set-upstream origin "$head"
		else
			git push 2>&1 | grep -v '^Everything up-to-date$'
		fi
		git push --tags 2>&1 | grep -v '^Everything up-to-date$'
	done

	# pull tags
	git fetch --tags

	# clear ssh key
	unset GIT_SSH_COMMAND

	popd &>/dev/null
done

